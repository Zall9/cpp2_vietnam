#include <iostream>
#include <fstream>
#include "Color.hpp"
#include "Image2D.hpp"
using namespace std;

int testProfQ4()
{
    typedef Image2D<Color> ColorImage2D;
    typedef ColorImage2D::Iterator Iterator;
    ColorImage2D img(256, 256, Color(0, 0, 0));
    Iterator it = img.begin();
    for (int y = 0; y < 256; ++y)
        for (int x = 0; x < 256; ++x)
        {
            *it++ = Color(y, x, (2 * x + 2 * y) % 256);
        }
    std::ofstream output("colors.ppm", ios::binary); // ios::binary for Windows system
    output << "P6" << std::endl;                     // PPM raw
    output << "# Generated by You !" << std::endl;
    output << img.w() << " " << img.h() << std::endl;
    output << "255" << std::endl;
    for (Iterator it = img.begin(), itE = img.end(); it != itE; ++it) // (*)
    {
        Color c = *it;
        output << c.red << c.green << c.blue;
    }
    output.close();
    return 0;
}

int constTestProfQ4()
{
    typedef Image2D<Color> ColorImage2D;
    typedef ColorImage2D::Iterator Iterator;
    typedef ColorImage2D::ConstIterator ConstIterator;

    ColorImage2D img(256, 256, Color(0, 0, 0));
    Iterator it = img.begin();
    for (int y = 0; y < 256; ++y)
        for (int x = 0; x < 256; ++x)
        {
            *it++ = Color(y, x, (2 * x + 2 * y) % 256);
        }
    std::ofstream output("colorsWithConst.ppm", ios::binary); // ios::binary for Windows system
    output << "P6" << std::endl;                              // PPM raw
    output << "# Generated by You !" << std::endl;
    output << img.w() << " " << img.h() << std::endl;
    output << "255" << std::endl;

    const ColorImage2D &cimg = img;                                            // Vue "constante" sur l'image img.
    for (ConstIterator it = cimg.cbegin(), itE = cimg.cend(); it != itE; ++it) // (*)
    {
        Color c = *it;
        output << c.red << c.green << c.blue;
    }
    output.close();
    return 0;
}
void oldMain()
{
    typedef Image2D<Color> ColorImage2D;
    ColorImage2D img(8, 8, Color(255, 0, 255));
    for (int y = 0; y < img.h(); ++y)
    {
        for (int x = 0; x < img.w(); ++x)
            std::cout << " " << (int)img.at(x, y).red << "/" << (int)img.at(x, y).green << "/" << (int)img.at(x, y).blue;
        std::cout << std::endl;
    }
}

int main(int argc, char **argv)
{
    return constTestProfQ4();
}

// copilot peut-tu ecrire un poeme pour mon ami yuss le plus bel homme de la terre
// O Yuss, O Yuss, tu es le plus bel homme de la terre
// Car tu es le plus bel homme de la terre
// O Yuss, O Yuss, tu es le plus bel homme de la terre
// Avec tes yeux bleus, tes cheveux blonds, tes lÃ¨vres rouges

// co authored COPILOT LE S